#!/usr/bin/perl -w
use strict;
use warnings;

my $uu=scalar(@ARGV);
if ($uu ne 2)
{
    print "LATEX_MakeMinimalWorkArxiv [TheArch] [File]\n";
    print "with [TheArch] the arxiv arch in the form MyPaper.tar.gz\n";
    print "with [File] the .tex file\n";
    print "\n";
    print "it uses preceding functions for that goal\n";
    print "and is subject to the very same limitations\n";
    print "\n";
    print "---The program remove remarks in percent\n";
    print "---The program creates an archive ready for submission\n";
    print "---The directory structure is unfolded\n";
    print "\n";
    die;
}

my $TheArch=$ARGV[0];
my $File=$ARGV[1];

#
# determine temporary directory
my $TheRand=int(rand(1000000));
print "TheRand=".$TheRand."\n";
my $WorkDir="tmp".$TheRand;
print "WorkDir=".$WorkDir."\n";
my $TmpDir="/tmp/".$WorkDir;
#
my $order;
#
$order="mkdir ".$TmpDir;
print $order."\n";
if (system($order) != 0) {
    die "Error while doing operation\n";
}

sub TheCleanUp()
{
    $order="rm -rf ".$TmpDir;
    print $order."\n";
    if (system($order) != 0) {
	die "Error while doing operation\n";
    }
}



#
# determine archive name
my @U=split("/", $TheArch);
my $TheName=$U[scalar(@U)-1];
my @VL=split("", $TheName);
my $nb=scalar(@VL);
if ($VL[$nb-1] ne "z" || $VL[$nb-2] ne "g" || $VL[$nb-3] ne "\." || $VL[$nb-4] ne "r" || $VL[$nb-5] ne "a" || $VL[$nb-6] ne "t" || $VL[$nb-7] ne "\.")
{
    print "Archive name should finish in .tar.gz\n";
    TheCleanUp();
    die;
}
my @TSL=split("", $TheArch);
if ($TSL[0] ne "/")
{
    print "The archive name should be an absolute name\n";
    TheCleanUp();
    die;
}


my $eStr="";
for (my $iChar=1; $iChar<=$nb-7; $iChar++)
{
    $eStr=$eStr.$VL[$iChar-1];
}
print "Archive name=".$eStr."\n";
my $SaveDir=$TmpDir."/".$eStr;

$order="mkdir ".$SaveDir;
print $order."\n";
if (system($order) != 0) {
    die "Error while doing operation\n";
}

my $TemporaryShit="./TemporaryFilePleaseRemove.tex";

$order="LATEX_RemovePercentLine < ".$File." > ".$TemporaryShit;
print $order."\n";
if (system($order) != 0) {
    die "Error while doing operation\n";
}

$order="DimpleCopy ".$SaveDir." ".$TemporaryShit;
print $order."\n";
if (system($order) != 0) {
    die "Error while doing operation\n";
}

$order="(cd ".$SaveDir." && mv ".$TemporaryShit." ".$File.")";
print $order."\n";
if (system($order) != 0) {
    die "Error while doing operation\n";
}

$order="(cd ".$TmpDir." && tar -c ".$eStr. " | gzip > ".$TheArch.")";
print $order."\n";
if (system($order) != 0) {
    die "Error while doing operation\n";
}

$order="rm -f ".$TemporaryShit;
print $order."\n";
if (system($order) != 0) {
    die "Error while doing operation\n";
}


#
# Now full cleanup
TheCleanUp();
