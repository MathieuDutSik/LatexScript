#!/usr/bin/perl -w
use strict;
use warnings;

my $uu=scalar(@ARGV);
if ($uu ne 2)
{
    print "LATEX_MakeElsevier [TheArch] [File]\n";
    print "with [TheArch] the arxiv arch in the form MyPaper.tar.gz\n";
    print "with [File] the .tex file\n";
    print "\n";
    print "it uses preceding functions for that goal\n";
    print "and is subject to the very same limitations:\n";
    print "\n";
    print "---The program remove remarks in percent\n";
    print "---The program creates an archive ready for submission\n";
    print "---The directory structure is unfolded\n";
    print "\n";
    die;
}

my $TheArch=$ARGV[0];
my $File=$ARGV[1];

#
# determine temporary directory
sub GetTemporaryDir($)
{
    my ($epre) = @_;
    while(1)
    {
	my $TheRand=int(rand(1000000));
	my $eWorkDir=$epre.$TheRand;
	if (-d $eWorkDir)
	{
	    print "Find an already existing directory\n";
	}
	else
	{
	    return $eWorkDir
	}
    }
    
}
my $WorkDir=GetTemporaryDir("else");
print "WorkDir=".$WorkDir."\n";
my $TmpDir="/tmp/".$WorkDir;
print "TmpDir=".$TmpDir."\n";

my $order1="mkdir ".$TmpDir;
print "order1=".$order1."\n";
if (system($order1) != 0) {
    die "Error for mkdir operation\n";
}


#
# determine archive name
my @U=split("/", $TheArch);
my $TheName=$U[scalar(@U)-1];
my @VL=split("", $TheName);
my $nb=scalar(@VL);

my $eStr="";
for (my $iChar=1; $iChar<=$nb-7; $iChar++)
{
    $eStr=$eStr.$VL[$iChar-1];
}
print "Archive name=".$eStr."\n";
my $SaveDir=$TmpDir."/".$eStr;
my $eDir =$eStr;
my $eDir1=$eStr."1";
my $eDir2=$eStr."2";
my $eDir3=$eStr."3";
my $eDir4=$eStr."4";
#$eDir5=$eStr."5";

my $SaveDir1=$TmpDir."/".$eDir1;
my $SaveDir2=$TmpDir."/".$eDir2;
my $SaveDir3=$TmpDir."/".$eDir3;
my $SaveDir4=$TmpDir."/".$eDir4;
#$SaveDir5=$TmpDir."/".$eDir5;




sub TheCleanUp()
{
    for (my $i=1; $i<=5; $i++)
    {
	my $eDir=$SaveDir.$i;
	my $order2="rm -rf ".$eDir;
	print "order2=".$order2."\n";
	if (system($order2) != 0) {
	    die "Error while doing rm operation\n";
	}
    }
    #
    my $order3="rm -rf ".$SaveDir;
    print "order3=".$order3."\n";
    if (system($order3) != 0) {
	die "Error while doing rm operation\n";
    }
    #
    my $order4="rm -rf ".$TmpDir;
    print "order4=".$order4."\n";
    if (system($order4) != 0) {
	die "Error while doing rm operation\n";
    }
}

if ($VL[$nb-1] ne "z" || $VL[$nb-2] ne "g" || $VL[$nb-3] ne "\." || $VL[$nb-4] ne "r" || $VL[$nb-5] ne "a" || $VL[$nb-6] ne "t" || $VL[$nb-7] ne "\.")
{
    print "Archive name should finish in .tar.gz\n";
    TheCleanUp();
    die;
}
my @TSL=split("", $TheArch);
if ($TSL[0] ne "/")
{
    print "The archive name should be an absolute name\n";
    TheCleanUp();
    die;
}




my $order5="mkdir ".$SaveDir1;
print "order5=".$order5."\n";
if (system($order5) != 0) {
    die "Error while doing operation\n";
}






#
# Directory unfolding operation
# Files in pap1
#

my $order6="LATEX_DirectoryUnfold ".$SaveDir1." ".$File;
print "order6=".$order6."\n";
if (system($order6) != 0) {
    die "Error while doing operation\n";
}

#
# Merging into a single latex file
#

my $order7="(cd ".$TmpDir." && cp -r ".$eDir1." ".$eDir2.")";
print "order7=".$order7."\n";
if (system($order7) != 0) {
    die "Error while doing operation\n";
}

my $order8="(cd ".$SaveDir2." && LATEX_FileMerging ".$File.")";
print "order8=".$order8."\n";
if (system($order8) != 0) {
    die "Error while doing operation\n";
}

#
# Removal of percent
#

my $order9="(cd ".$TmpDir." && cp -r ".$eDir2." ".$eDir3.")";
print "order9=".$order9."\n";
if (system($order9) != 0) {
    die "Error while doing operation\n";
}

my $LatexTemp=$TmpDir."/temp.tex";

my $order10="(cd ".$SaveDir3." && LATEX_RemovePercentLine < ".$File." > ".$LatexTemp.")";
print "order10=".$order10."\n";
if (system($order10) != 0) {
    die "Error while doing operation\n";
}

my $order11="(cd ".$SaveDir3." && mv ".$LatexTemp." ".$File.")";
print "order11=".$order11."\n";
if (system($order11) != 0) {
    die "Error while doing operation\n";
}

#
# Now renaming the figures according to Elsevier standard
#

my $order12="(cd ".$TmpDir." && cp -r ".$eDir3." ".$eDir4.")";
print "order12=".$order12."\n";
if (system($order12) != 0) {
    die "Error while doing operation\n";
}

my $order13="(cd ".$SaveDir4." && LATEX_FigureFileRenumbering 2 ".$File.")";
print "order13=".$order13."\n";
if (system($order13) != 0) {
    die "Error while doing operation\n";
}

my $order14="(cd ".$SaveDir4." && LATEX_BBL_merging ".$File.")";
print "order14=".$order14."\n";
if (system($order14) != 0) {
    die "Error while doing operation\n";
}


opendir (DIR, $SaveDir4) or die "impossible to open ".$SaveDir4;
my @ListBIBfile=();
while (my $file = readdir(DIR)) {
#    print "file=".$file."\n";
    my $len=length $file;
    my $lenB=$len-4;
#    print "   lenB=".$lenB."\n";
    if ($lenB >= 0) {
	my $TheExt=substr $file, $lenB;
#	print "   TheExt=".$TheExt."\n";
	if ($TheExt eq ".bib")
	{
#	    print "   Matching\n";
	    $ListBIBfile[scalar(@ListBIBfile)] = $file;
	}
    }
}
my $nbBIB=scalar(@ListBIBfile);
print "nbBIB=".$nbBIB."\n";
if ($nbBIB > 1)
{
    print "There is one more bib file than needed\n";
    print "Not allowed\n";
    die;
}

foreach my $file(@ListBIBfile)
{
    my $FileExt=$SaveDir4."/".$file;
    print "FileExt=".$FileExt."\n";
    my $order15="rm -f ".$FileExt;
    print "order15=".$order15."\n";
    if (system($order15) != 0) {
	die "Error while doing operation\n";
    }
}





my $TmpFile="/tmp/filebstl.tex";
my $order16="(cd ".$SaveDir4." && LATEX_ReorderEpsfig < ".$File." > ".$TmpFile.")";
print "order16=".$order16."\n";
if (system($order16) != 0) {
    die "Error while doing operation\n";
}

my $order17="(cd ".$SaveDir4." && mv ".$TmpFile." ".$File.")";
print "order17=".$order17."\n";
if (system($order17) != 0) {
    die "Error while doing operation\n";
}

#
# Copying into the final and creating tar.gz
#

my $order18="(cd ".$TmpDir." && cp -r ".$eDir4." ".$eDir.")";
print "order18=".$order18."\n";
if (system($order18) != 0) {
    die "Error while doing operation\n";
}

my $eArch=$eDir.".tar.gz";

my $order19="(cd ".$TmpDir." && tar -c ".$eDir." | gzip > ".$eArch.")";
print "order19=".$order19."\n";
if (system($order19) != 0) {
    die "Error while doing operation\n";
}

my $order20="(cd ".$TmpDir." && mv ".$eArch." ".$TheArch.")";
print "order20=".$order20."\n";
if (system($order20) != 0) {
    die "Error while doing operation\n";
}

#
# Now full cleanup
TheCleanUp();
